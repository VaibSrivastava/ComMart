{"ast":null,"code":"var _jsxFileName = \"F:\\\\Mern stack\\\\Section 2\\\\frontend\\\\src\\\\UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createContext,\n  useState,\n  useContext\n} = require(\"react\");\n\n// initialize the context\nconst UserContext = createContext();\n\n// create a provider\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // get user data from session and convert to JS using 'JSON.parse()' \n  // and store in state\n  const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')));\n  const [loggedIn, setLoggedIn] = useState(currentUser !== null ? true : false);\n  const logout = () => {\n    sessionStorage.removeItem('user');\n    setCurrentUser(null);\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      loggedIn,\n      setLoggedIn,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"aqW5fMv51YnPi9WzMFJ3wkE7a+M=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nconst useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useUserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","createContext","useState","useContext","require","UserContext","UserProvider","children","_s","navigate","currentUser","setCurrentUser","JSON","parse","sessionStorage","getItem","loggedIn","setLoggedIn","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["F:/Mern stack/Section 2/frontend/src/UserContext.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n\r\nconst { createContext, useState, useContext } = require(\"react\");\r\n\r\n// initialize the context\r\nconst UserContext = createContext();\r\n\r\n\r\n// create a provider\r\nexport const UserProvider = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // get user data from session and convert to JS using 'JSON.parse()' \r\n    // and store in state\r\n    const [currentUser, setCurrentUser] = useState(\r\n        JSON.parse(sessionStorage.getItem('user'))\r\n    );\r\n\r\n    const [loggedIn, setLoggedIn] = useState(currentUser !==null ? true : false);\r\n\r\n    const logout = () => {\r\n        sessionStorage.removeItem('user');\r\n        setCurrentUser(null);\r\n        setLoggedIn(false);\r\n    }\r\n\r\n    return <UserContext.Provider value={{loggedIn, setLoggedIn, logout}} >\r\n        {children}\r\n    </UserContext.Provider>\r\n};\r\n\r\nconst useUserContext = () => useContext(UserContext);\r\n\r\nexport default useUserContext;"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAM;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAEhE;AACA,MAAMC,WAAW,GAAGJ,aAAa,CAAC,CAAC;;AAGnC;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAExC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAC1CU,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAC7C,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACQ,WAAW,KAAI,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;EAE5E,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACjBJ,cAAc,CAACK,UAAU,CAAC,MAAM,CAAC;IACjCR,cAAc,CAAC,IAAI,CAAC;IACpBM,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBAAOjB,OAAA,CAACK,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAACL,QAAQ;MAAEC,WAAW;MAAEC;IAAM,CAAE;IAAAX,QAAA,EAC/DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAC3B,CAAC;AAACjB,EAAA,CArBWF,YAAY;EAAA,QAEJR,WAAW;AAAA;AAAA4B,EAAA,GAFnBpB,YAAY;AAuBzB,MAAMqB,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACE,WAAW,CAAC;AAAA;AAACuB,GAAA,CAA/CD,cAAc;AAEpB,eAAeA,cAAc;AAAC,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}