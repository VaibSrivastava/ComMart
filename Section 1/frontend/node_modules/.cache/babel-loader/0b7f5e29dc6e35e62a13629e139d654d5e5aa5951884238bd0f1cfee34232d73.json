{"ast":null,"code":"var _jsxFileName = \"F:\\\\Mern stack\\\\Section 2\\\\frontend\\\\src\\\\components\\\\UpdateUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateUser = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const fetchUserData = async () => {\n    const res = fetch('http://localhost:5000/user/getbyid' + id);\n    console.log(res.status);\n    const data = await res.json();\n    console.log(data);\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const signupForm = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: async values => {\n      console.log(values);\n\n      // sending request to backend\n      const res = await fetch('http://localhost:5000/user/add', {\n        method: 'POST',\n        body: JSON.stringify(values),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.status);\n      if (res.status === 200) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Signup Success',\n          text: 'Now login to continue'\n        });\n        navigate('/login');\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops!!',\n          text: 'Some error occured'\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Update User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateUser, \"BfDF+cduIJr1ZFZi728zhsThalo=\", true, function () {\n  return [useParams];\n});\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","UpdateUser","_s","id","fetchUserData","res","fetch","console","log","status","data","json","signupForm","useFormik","initialValues","name","email","password","onSubmit","values","method","body","JSON","stringify","headers","Swal","fire","icon","title","text","navigate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Mern stack/Section 2/frontend/src/components/UpdateUser.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst UpdateUser = () => {\r\n    const {id} = useParams();\r\n    const fetchUserData= async() => {\r\n        const res = fetch('http://localhost:5000/user/getbyid'+id);\r\n        console.log(res.status);\r\n        const data =await res.json();\r\n        console.log(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const signupForm = useFormik({\r\n        initialValues: {\r\n          name: '',\r\n          email: '',\r\n          password: ''\r\n        },\r\n    \r\n        onSubmit: async (values) => { \r\n          console.log(values);\r\n    \r\n          // sending request to backend\r\n          const res = await fetch('http://localhost:5000/user/add', {\r\n            method: 'POST',\r\n            body : JSON.stringify(values),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          console.log(res.status);\r\n    \r\n          if(res.status === 200){\r\n            Swal.fire({\r\n              icon : 'success',\r\n              title: 'Signup Success',\r\n              text: 'Now login to continue'\r\n            });\r\n            navigate('/login');\r\n          }else{\r\n            Swal.fire({\r\n              icon : 'error',\r\n              title: 'Oops!!',\r\n              text: 'Some error occured'\r\n            });\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1 className='text-center'>Update User Data</h1>\r\n        <h2>{id}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateUser\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxB,MAAMM,aAAa,GAAE,MAAAA,CAAA,KAAW;IAC5B,MAAMC,GAAG,GAAGC,KAAK,CAAC,oCAAoC,GAACH,EAAE,CAAC;IAC1DI,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,MAAM,CAAC;IACvB,MAAMC,IAAI,GAAE,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC5BJ,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;EACrB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZO,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,UAAU,GAAGC,SAAS,CAAC;IACzBC,aAAa,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IAEDC,QAAQ,EAAE,MAAOC,MAAM,IAAK;MAC1BZ,OAAO,CAACC,GAAG,CAACW,MAAM,CAAC;;MAEnB;MACA,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDc,MAAM,EAAE,MAAM;QACdC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;QAC7BK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFjB,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,MAAM,CAAC;MAEvB,IAAGJ,GAAG,CAACI,MAAM,KAAK,GAAG,EAAC;QACpBgB,IAAI,CAACC,IAAI,CAAC;UACRC,IAAI,EAAG,SAAS;UAChBC,KAAK,EAAE,gBAAgB;UACvBC,IAAI,EAAE;QACR,CAAC,CAAC;QACFC,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAI;QACHL,IAAI,CAACC,IAAI,CAAC;UACRC,IAAI,EAAG,OAAO;UACdC,KAAK,EAAE,QAAQ;UACfC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;EAGN,oBACE7B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAIgC,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpC,OAAA;MAAA+B,QAAA,EAAK5B;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAAlC,EAAA,CA1DKD,UAAU;EAAA,QACCH,SAAS;AAAA;AAAAuC,EAAA,GADpBpC,UAAU;AA4DhB,eAAeA,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}